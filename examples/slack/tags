!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ArduinoSlack	ArduinoSlack.cpp	/^ArduinoSlack::ArduinoSlack(Client &client, const char *bearerToken)$/;"	f	class:ArduinoSlack
ArduinoSlack	ArduinoSlack.h	/^class ArduinoSlack$/;"	c
ArduinoSlack_h	ArduinoSlack.h	10;"	d
CREDENTIALS_H	credentials.h	2;"	d
NUM_USERS_TO_SUPPORT	ArduinoSlack.h	60;"	d
SLACK_ACCESS_TOKEN	credentials.h	6;"	d
SLACK_CONVERSATIONS_HISTORY_ENDPOINT	ArduinoSlack.h	48;"	d
SLACK_DEBUG_SERIAL	ArduinoSlack.h	30;"	d
SLACK_DEBUG_SERIAL	ArduinoSlack.h	33;"	d
SLACK_DEBUG_SERIAL_LN	ArduinoSlack.h	31;"	d
SLACK_DEBUG_SERIAL_LN	ArduinoSlack.h	34;"	d
SLACK_ENABLE_DEBUG	ArduinoSlack.h	19;"	d
SLACK_ENABLE_SERIAL	ArduinoSlack.h	16;"	d
SLACK_FINGERPRINT	ArduinoSlack.h	39;"	d
SLACK_HOST	ArduinoSlack.h	37;"	d
SLACK_POST_MESSAGE_ENDPOINT	ArduinoSlack.h	47;"	d
SLACK_PRESENCE_AUTO	ArduinoSlack.h	43;"	d
SLACK_PRESENCE_AWAY	ArduinoSlack.h	42;"	d
SLACK_SERIAL	ArduinoSlack.h	22;"	d
SLACK_SERIAL	ArduinoSlack.h	25;"	d
SLACK_SERIAL_LN	ArduinoSlack.h	23;"	d
SLACK_SERIAL_LN	ArduinoSlack.h	26;"	d
SLACK_TIMEOUT	ArduinoSlack.h	40;"	d
SLACK_USERS_CONVERSATIONS_ENDPOINT	ArduinoSlack.h	49;"	d
SLACK_USERS_PROFILE_SET_ENDPOINT	ArduinoSlack.h	45;"	d
SLACK_USERS_SET_PRESENCE_ENDPOINT	ArduinoSlack.h	46;"	d
SlackMessage	ArduinoSlack.h	/^struct SlackMessage$/;"	s
SlackMessages	ArduinoSlack.h	/^struct SlackMessages {$/;"	s
SlackProfile	ArduinoSlack.h	/^struct SlackProfile$/;"	s
SlackUsers	ArduinoSlack.h	/^struct SlackUsers$/;"	s
SlackUsersConversations	ArduinoSlack.h	/^struct SlackUsersConversations {$/;"	s
WIFI_PASSWORD	credentials.h	5;"	d
WIFI_SSID	credentials.h	4;"	d
_bearerToken	ArduinoSlack.h	/^  const char *_bearerToken;$/;"	m	class:ArduinoSlack
channelHistory	ArduinoSlack.cpp	/^SlackMessages ArduinoSlack::channelHistory(char *channelId) {$/;"	f	class:ArduinoSlack
channelIds	ArduinoSlack.h	/^  char *channelIds[22];$/;"	m	struct:SlackUsersConversations
channelNames	ArduinoSlack.h	/^  char *channelNames[22];$/;"	m	struct:SlackUsersConversations
channelsObj	ArduinoSlack.h	/^  JsonObject channelsObj;$/;"	m	struct:SlackUsersConversations
client	ArduinoSlack.h	/^  Client *client;$/;"	m	class:ArduinoSlack
closeClient	ArduinoSlack.cpp	/^void ArduinoSlack::closeClient()$/;"	f	class:ArduinoSlack
displayName	ArduinoSlack.h	/^  char *displayName;$/;"	m	struct:SlackProfile
error	ArduinoSlack.h	/^    bool error;$/;"	m	struct:SlackMessages
error	ArduinoSlack.h	/^  bool error;$/;"	m	struct:SlackMessage
error	ArduinoSlack.h	/^  bool error;$/;"	m	struct:SlackProfile
error	ArduinoSlack.h	/^  bool error;$/;"	m	struct:SlackUsersConversations
getConvHistEndpointArgs	ArduinoSlack.h	/^  const char *getConvHistEndpointArgs =$/;"	m	class:ArduinoSlack
getHttpStatusCode	ArduinoSlack.cpp	/^int ArduinoSlack::getHttpStatusCode()$/;"	f	class:ArduinoSlack
id	ArduinoSlack.h	/^    char *id[NUM_USERS_TO_SUPPORT];$/;"	m	struct:SlackUsers
is_channel	ArduinoSlack.h	/^  bool is_channel;$/;"	m	struct:SlackUsersConversations
makeGetRequest	ArduinoSlack.cpp	/^int ArduinoSlack::makeGetRequest(const char *command)$/;"	f	class:ArduinoSlack
makePostRequest	ArduinoSlack.cpp	/^int ArduinoSlack::makePostRequest(const char *command, const char *body, const char *contentType)$/;"	f	class:ArduinoSlack
messages	ArduinoSlack.h	/^    SlackMessage messages[30];$/;"	m	struct:SlackMessages
n_channels	ArduinoSlack.h	/^  int  n_channels;$/;"	m	struct:SlackUsersConversations
n_messages	ArduinoSlack.h	/^    int n_messages;$/;"	m	struct:SlackMessages
n_messages	ArduinoSlack.h	/^  int n_messages;$/;"	m	struct:SlackMessage
name	ArduinoSlack.h	/^    char *name[NUM_USERS_TO_SUPPORT];$/;"	m	struct:SlackUsers
portNumber	ArduinoSlack.h	/^  int portNumber = 443;$/;"	m	class:ArduinoSlack
postMessage	ArduinoSlack.cpp	/^SlackMessage ArduinoSlack::postMessage(const char *channel, const char *text) {$/;"	f	class:ArduinoSlack
profileBufferSize	ArduinoSlack.h	/^  int profileBufferSize = 10000;$/;"	m	class:ArduinoSlack
purpose	ArduinoSlack.h	/^  char *purpose[200];$/;"	m	struct:SlackUsersConversations
setConvoHistoryBody	ArduinoSlack.h	/^  const char *setConvoHistoryBody =$/;"	m	class:ArduinoSlack
setCustomStatus	ArduinoSlack.cpp	/^SlackProfile ArduinoSlack::setCustomStatus(const char *text, const char *emoji, int expiration)$/;"	f	class:ArduinoSlack
setEndpointBody	ArduinoSlack.h	/^  const char *setEndpointBody =$/;"	m	class:ArduinoSlack
setMessageBody	ArduinoSlack.h	/^  const char *setMessageBody =$/;"	m	class:ArduinoSlack
setPresence	ArduinoSlack.cpp	/^bool ArduinoSlack::setPresence(const char *presence)$/;"	f	class:ArduinoSlack
skipHeaders	ArduinoSlack.cpp	/^void ArduinoSlack::skipHeaders(bool tossUnexpectedForJSON)$/;"	f	class:ArduinoSlack
slack_server_cert	ArduinoSlackCert.h	/^const char *slack_server_cert = "-----BEGIN CERTIFICATE-----\\n"$/;"	v
statusEmoji	ArduinoSlack.h	/^  char *statusEmoji;$/;"	m	struct:SlackProfile
statusExpiration	ArduinoSlack.h	/^  int statusExpiration;$/;"	m	struct:SlackProfile
statusText	ArduinoSlack.h	/^  char *statusText;$/;"	m	struct:SlackProfile
stripBadDataFromClientResponse	ArduinoSlack.cpp	/^void ArduinoSlack::stripBadDataFromClientResponse(char *payload) {$/;"	f	class:ArduinoSlack
text	ArduinoSlack.h	/^  char *text;$/;"	m	struct:SlackMessage
topic	ArduinoSlack.h	/^  char *topic[200];$/;"	m	struct:SlackUsersConversations
type	ArduinoSlack.h	/^  char *type;$/;"	m	struct:SlackMessage
userid	ArduinoSlack.h	/^  char *userid;$/;"	m	struct:SlackMessage
username	ArduinoSlack.h	/^  char *username;$/;"	m	struct:SlackMessage
usersConversations	ArduinoSlack.cpp	/^SlackUsersConversations ArduinoSlack::usersConversations()$/;"	f	class:ArduinoSlack
